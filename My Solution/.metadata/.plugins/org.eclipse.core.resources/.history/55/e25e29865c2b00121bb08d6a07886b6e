ANSI-C/cC++ Compiler for HC08 V-5.0.39 Build 11346, Dec 13 2011

    1:  /*****************************************************************************
    2:  * IRQ implementation.
    3:  * 
    4:  * 
    5:  * Copyright (c) 2007, Freescale, Inc. All rights reserved.
    6:  *
    7:  * date     	03/23/09
    8:  * 
    9:  * No part of this document must be reproduced in any form - including copied,
   10:  * transcribed, printed or by any electronic means - without specific written
   11:  * permission from Freescale Semiconductor.
   12:  *
   13:  *****************************************************************************/
   14:  
   15:  #include "IRQ_Interface.h"
   16:  /************************************************************************************
   17:  *************************************************************************************
   18:  * Private prototypes
   19:  *************************************************************************************
   20:  ************************************************************************************/
   21:  
   22:  /************************************************************************************
   23:  *************************************************************************************
   24:  * Private type definitions
   25:  *************************************************************************************
   26:  ************************************************************************************/
   27:  
   28:  /************************************************************************************
   29:  *************************************************************************************
   30:  * Private memory declarations
   31:  *************************************************************************************
   32:  ************************************************************************************/
   33:  
   34:  static irqCallback_t IrqCallBack;
   35:  
   36:  /************************************************************************************
   37:  *************************************************************************************
   38:  * Private macros
   39:  *************************************************************************************
   40:  ************************************************************************************/
   41:  
   42:  /************************************************************************************
   43:  *************************************************************************************
   44:  * Interface functions
   45:  *************************************************************************************
   46:  ************************************************************************************/
   47:  void IRQ_Init
   48:  (
   49:  irqCallback_t UserCallBack
   50:  )
   51:  {
   52:     IRQ_AckIrq(); 			  	/* Clear Interrupt Flag   */
  0000 1400     [5]             BSET  2,_IRQSC
   53:     IRQ_InitIrq(); 			  /* Inits control register */
  0002 6e1600   [4]             MOV   #22,_IRQSC
   54:     IrqCallBack = UserCallBack;  /*Sets the IRQ calback*/
  0005 960000   [5]             STHX  IrqCallBack
   55:  }
  0008 8d       [7]             RTC   
   56:  
   57:  
   58:  /************************************************************************************
   59:  *************************************************************************************
   60:  * private functions
   61:  *************************************************************************************
   62:  ************************************************************************************/
   63:  /* Place it in NON_BANKED memory */
   64:  #pragma CODE_SEG ISR_SEGMENT
   65:  /************************************************************************************/
   66:  INTERRUPT_KEYWORD void IRQ_Isr(void)
   67:  {
  0000 8b       [2]             PSHH  
   68:    IRQ_AckIrq(); 			                   	/* Clear Interrupt Flag   */
  0001 1400     [5]             BSET  2,_IRQSC
   69:    if(NULL != IrqCallBack){
  0003 320000   [5]             LDHX  IrqCallBack
  0006 2701     [3]             BEQ   L9 ;abs = 0009
   70:      IrqCallBack();       /*Calls the callback*/  
  0008 fd       [5]             JSR   ,X
  0009          L9:     
   71:    }
   72:  }
  0009 8a       [3]             PULH  
  000a 80       [9]             RTI   
   73:  
   74:  /************************************************************************************/
   75:  INTERRUPT_KEYWORD void Default_Dummy_ISR(void)
   76:  {
  0000 8b       [2]             PSHH  
   77:     // Unimplemented ISRs trap.
   78:     asm BGND;
  0001 82       [5]             BGND  
   79:  }
  0002 8a       [3]             PULH  
  0003 80       [9]             RTI   
   80:  #pragma CODE_SEG DEFAULT
   81:  
